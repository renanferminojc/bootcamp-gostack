import React, { useState, useEffect, useMemo, useCallback } from 'react';

function App() {
	const [techs, setTech] = useState([]);
	const [newTech, setNewTech] = useState('');

	// Montada toda vez que o componente é criado
	// function handleAdd() {
	// 	setTech([...techs, newTech]);
	// 	setNewTech('');
	// }

	// Montada somente uma vez quando os estados definidos no array de dependencias sofrerem uma alteração
	const handleAdd = useCallback(() => {
		setTech([...techs, newTech]);
		setNewTech('');
	}, [newTech, techs]);

	// Executa uma única vez pois não tem nenhuma dependência no array
	useEffect(() => {
		const tech = localStorage.getItem('techs');

		if (tech) {
			setTech(JSON.parse(tech));
		}

		// Funcão executará sempre que o componente deixar de existir igual o componentUnmount
		// return () => {};
	}, []);

	useEffect(() => {
		localStorage.setItem('techs', JSON.stringify(techs));
	}, [techs]);

	const techSize = useMemo(() => techs.length, [techs]);

	return (
		<>
			<ul>
				{techs.map((tech) => (
					<li key={tech}>{tech}</li>
				))}
			</ul>
			<strong>Você tem {techSize} tecnologias</strong>
			<br />
			<input value={newTech} onChange={(e) => setNewTech(e.target.value)} />
			<button type="button" onClick={handleAdd}>
				Adicionar
			</button>
		</>
	);
}

export default App;
